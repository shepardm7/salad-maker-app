{"version":3,"sources":["assets/spinach.jpg","assets/aurgula.jpg","assets/mixed-greens.jpg","assets/tomato.jpg","assets/feta-cheese.jpg","assets/cucumber.jpg","assets/pineapple.jpg","assets/onion.jpg","assets/green-pepper.jpg","assets/pickle.jpg","assets/cheddar-cheese.jpg","assets/house-dressing.jpg","assets/ranch.png","assets/honey-mustard.jpg","assets/salad-bowl.png","assets/lettuce.jpg","assets/toppings.jpg","assets/dressing.jpg","logo.svg","components/section-container/section-container.comp.jsx","components/button/button.comp.jsx","components/section-footer/section-footer.comp.jsx","redux/types.js","redux/actions/app-route.actions.js","redux/actions/fav.actions.js","components/checkmark/checkmark.comp.jsx","components/ingredient-list-item/ingredient-list-item.comp.jsx","components/sm-ingredients/sm-ingredients.comp.jsx","data/data-store.js","components/salad-overview-item/salad-overview-item.comp.jsx","components/salad-overview/salad-overview.comp.jsx","utils/alert.js","components/salad-maker/salad-maker.comp.jsx","components/fav-list-item/fav-list-item.comp.jsx","components/fav-list/fav-list.comp.jsx","components/fav/fav.comp.jsx","components/main-container/main-container.comp.jsx","App.js","serviceWorker.js","redux/reducers/app-route.reducer.js","redux/reducers/fav.reducer.js","redux/reducers/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","SectionContainer","children","header","className","Button","label","onClick","color","isInverse","disabled","Fragment","cls","btnClass","data-tip","data-for","id","place","type","effect","defaultProps","SectionFooter","routeTypes","favTypes","routesMap","fav","defaultHeader","Comp","sectionProps","saladMaker","setRoute","props","dispatch","payload","console","log","AppRouteActions","setRouteWithName","name","parseSalad","salad","rest","Object","keys","forEach","key","temp","key2","checked","addFavItem","uuid","updateFavItem","FavActions","removeFavItem","addOrUpdateItem","clearFavs","CheckMark","xmlns","viewBox","fill","d","IngredientListItem","item","handleOnItemClick","img","style","backgroundImage","SmIngredients","selectedSalad","saladColors","useState","lettuces","toppings","dressings","stateTabs","setStateTabs","links","tabs","tabPanels","handleCheckClicked","e","target","push","onChange","borderColor","values","map","itemKey","selectedTabClassName","selectedTabPanelClassName","ingredients","LettuceImg","SpinachImg","ArugulaImg","MixedGreensImg","ToppingImg","TomatoImg","FetaCheeseImg","CucumberImg","PineappleImg","OnionImg","GreenPepperImg","PickleImg","CheddarCheeseImg","DressingImg","HouseDressingImg","RanchImg","HoneyMustardImg","SaladOverviewItem","itemType","filter","ingredient","length","SaladOverview","MySwal","withReactContent","Swal","defaultConfig","confirmButtonColor","cancelButtonColor","SaladMaker","addOrUpdateSalad","mergeObj","JSON","parse","stringify","selectedSaladCopy","setSelectedSaladCopy","useEffect","handleAddSaladClick","defaultValue","a","async","fire","title","input","confirmButtonText","showCancelButton","inputValue","inputValidator","value","showTextAlert","then","undefined","config","doOnSelect","count","icon","mixin","toast","position","showConfirmButton","timer","mapDispatchToProps","connect","deleteSalad","faEdit","cancelButtonText","focusCancel","res","faTrashAlt","FavList","favList","favItem","list","appRoute","getComp","App","SaladBowlImg","Boolean","window","location","hostname","match","initialState","AppRouteReducer","state","action","FavReducer","RootReducer","combineReducers","middlewares","thunk","composers","applyMiddleware","Store","createStore","compose","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b027636e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinach.00cd63d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aurgula.d3d73194.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mixed-greens.2f642faa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tomato.7ff655c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/feta-cheese.b0ab98b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cucumber.591eb8d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pineapple.42ddc174.jpg\";","module.exports = __webpack_public_path__ + \"static/media/onion.50b2a66e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-pepper.b43e4db0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pickle.c0e1bb76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cheddar-cheese.ac0c114a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/house-dressing.46768863.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ranch.d77f06a0.png\";","module.exports = __webpack_public_path__ + \"static/media/honey-mustard.a5f46aa4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salad-bowl.83162198.png\";","module.exports = __webpack_public_path__ + \"static/media/lettuce.82a62f7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/toppings.6f76cd3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dressing.d58943c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './section-container.styles.scss';\r\n\r\nconst SectionContainer = ({ children, header }) => {\r\n\treturn (\r\n\t\t\t<div className='section-container-comp right-shadow has-border'>\r\n\t\t\t\t<div className=\"section-header\">\r\n\t\t\t\t\t<div className=\"app-title\">Freshii Salads</div>\r\n\t\t\t\t\t<div className=\"section-title\">{header}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSectionContainer.propTypes = {\r\n\r\n};\r\n\r\nexport default SectionContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.styles.scss';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Button = ({label, onClick, color, isInverse, disabled}) => {\r\n\tconst btnClass = () => {\r\n\t\tlet cls = 'button-comp';\r\n\t\tif (isInverse) {\r\n\t\t\tcls += ' is-inverse';\r\n\t\t}\r\n\t\tif (disabled) cls += ' disabled';\r\n\t\tswitch (color) {\r\n\t\t\tcase 'danger':\r\n\t\t\t\tcls += ' color-danger';\r\n\t\t\tdefault:\r\n\t\t\t\tcls += ' color-default';\r\n\t\t}\r\n\t\treturn cls;\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\r\n\t\t\t\t<button className={btnClass()} onClick={onClick} data-tip data-for='add-btn'>\r\n\t\t\t\t\t{/*<div className=\"overlay\" />*/}\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</button>\r\n\t\t\t\t{disabled ? (\r\n\t\t\t\t\t\t<ReactTooltip id='add-btn' place=\"top\" type=\"light\" effect=\"solid\">\r\n\t\t\t\t\t\t\t<span>Can&apos;t add more than 3 salads</span>\r\n\t\t\t\t\t\t</ReactTooltip>\r\n\t\t\t\t) : null}\r\n\t\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: 'default',\r\n\tisInverse: false,\r\n\tdisabled: false\r\n};\r\n\r\nButton.propTypes = {\r\n\tlabel: PropTypes.string.isRequired,\r\n\tonClick: PropTypes.func.isRequired,\r\n\tcolor: PropTypes.string,\r\n\tisInverse: PropTypes.bool,\r\n\tdisabled: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './section-footer.styles.scss';\r\n\r\nconst SectionFooter = ({ children }) => {\r\n\treturn (\r\n\t\t\t<div className='section-footer-comp'>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSectionFooter.propTypes = {\r\n\r\n};\r\n\r\nexport default SectionFooter;\r\n","export const routeTypes = {\r\n\tsetCurrentPage: 'route:SetCurrentPage'\r\n};\r\n\r\nexport const favTypes = {\r\n\taddFavItem: 'cart:addFavItem',\r\n\tremoveFavItem: 'cart:removeFavItem',\r\n\tupdateFavItem: 'cart:updateFavItem',\r\n\tclearFavs: 'cart:clearFavs'\r\n};\r\n\r\nexport const smTypes = {\r\n\taddLettuce: 'sm:addLettuce',\r\n\tremoveLettuce: 'sm:removeLettuce',\r\n\taddTopping: 'sm:addTopping',\r\n\tremoveTopping: 'sm:removeTopping',\r\n\taddDressing: 'sm:addDressing',\r\n\tremoveDressing: 'sm:removeDressing'\r\n};\r\n","import {routeTypes} from \"../types\";\r\n\r\nconst routesMap = {\r\n\tfav: {\r\n\t\tdefaultHeader: 'My Fav Salads',\r\n\t\tComp: 'fav',\r\n\t\tdefaultProps: {},\r\n\t\tsectionProps: {}\r\n\t},\r\n\tsaladMaker: {\r\n\t\tdefaultHeader: 'Salad maker',\r\n\t\tComp: 'saladMaker',\r\n\t\tdefaultProps: {},\r\n\t\tsectionProps: {}\r\n\t}\r\n};\r\n\r\nexport const setRoute = (Comp, header, props = {}, sectionProps = {}) => dispatch => {\r\n\tdispatch({ type: routeTypes.setCurrentPage, payload: { Comp, header, props, sectionProps }});\r\n\tconsole.log('app route actions', AppRouteActions);\r\n};\r\n\r\nexport const setRouteWithName = (name, props = {}, sectionProps = {}) => dispatch => {\r\n\tdispatch(setRoute(routesMap[name].Comp, routesMap[name].defaultHeader, {...routesMap[name].defaultProps, ...props}, {...routesMap[name].sectionProps, ...sectionProps}));\r\n};\r\n\r\nconst AppRouteActions = {\r\n\tsetRoute,\r\n\tsetRouteWithName\r\n};\r\n\r\nexport default AppRouteActions;\r\n","import {favTypes} from \"../types\";\r\nimport uuid from \"uuid/v1\";\r\n\r\nexport const parseSalad = salad => {\r\n\tconst { id, name, ...rest } = salad;\r\n\tObject.keys(rest).forEach(key => {\r\n\t\tlet temp = {};\r\n\t\tObject.keys(rest[key]).forEach(key2 => {\r\n\t\t\tif (rest[key][key2].checked) temp = { ...temp, [key2]: rest[key][key2] };\r\n\t\t});\r\n\t\trest[key] = temp;\r\n\t});\r\n\treturn ({ id, name, ...rest });\r\n};\r\n\r\nconst addOrUpdateItem = salad => dispatch => {\r\n\tconst { id } = salad;\r\n\tdispatch( id ? updateFavItem(salad) : addFavItem(salad));\r\n};\r\n\r\nconst addFavItem = salad => dispatch => {\r\n\tsalad.id = uuid();\r\n\tdispatch({ type: favTypes.addFavItem, payload: parseSalad(salad) });\r\n};\r\n\r\nconst removeFavItem = id => dispatch => {\r\n\tdispatch({ type: favTypes.removeFavItem, payload: id })\r\n};\r\n\r\nconst updateFavItem = salad => dispatch => {\r\n\tdispatch({ type: favTypes.updateFavItem, payload: parseSalad(salad) });\r\n};\r\n\r\nconst clearFavs = () => dispatch => {\r\n\tdispatch({ type: favTypes.clearFavs });\r\n};\r\n\r\nconst getParsedFavList = () => (dispatch, getState) => {\r\n\tconst { fav: { list } } = getState();\r\n\t\r\n};\r\n\r\nconst FavActions = {\r\n\taddFavItem,\r\n\tremoveFavItem,\r\n\tupdateFavItem,\r\n\taddOrUpdateItem,\r\n\tclearFavs\r\n};\r\n\r\nexport default FavActions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './checkmark.styles.scss';\r\n\r\nconst CheckMark = props => {\r\n\treturn (\r\n\t\t\t<div className='checkmark-comp'>\r\n\t\t\t\t<svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n\t\t\t\t\t<path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nCheckMark.propTypes = {\r\n\r\n};\r\n\r\nexport default CheckMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ingredient-list-item.styles.scss';\r\nimport CheckMark from \"../checkmark/checkmark.comp\";\r\n\r\nconst IngredientListItem = ({item, handleOnItemClick}) => {\r\n\tconsole.log('item', item.name, item.checked);\r\n\tconst { img, name } = item;\r\n\treturn (\r\n\t\t\t<div className='ingredient-list-item-comp' onClick={() => handleOnItemClick(item.id)}>\r\n\t\t\t\t<div className='left-part'>\r\n\t\t\t\t\t<div className=\"img-container\" style={{backgroundImage: `url(${img})`}}/>\r\n\t\t\t\t\t<span className=\"name\">{name}</span></div>\r\n\t\t\t\t<div className='right-part'>{item.checked ? <CheckMark/> : null}</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nIngredientListItem.propTypes = {\r\n\titem: PropTypes.object.isRequired\r\n};\r\n\r\nexport default IngredientListItem;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\r\nimport './sm-ingredients.styles.scss';\r\nimport IngredientListItem from \"../ingredient-list-item/ingredient-list-item.comp\";\r\n\r\nconst SmIngredients = ({selectedSalad, handleOnItemClick, saladColors }) => {\r\n\tconst [stateTabs, setStateTabs] = useState({\r\n\t\tlettuces: true,\r\n\t\ttoppings: true,\r\n\t\tdressings: true\r\n\t});\r\n\t\r\n\tconsole.log('sm-ingredients', selectedSalad);\r\n\t\r\n\tconst links = [];\r\n\tconst tabs = [];\r\n\tconst tabPanels = [];\r\n\t\r\n\tconst handleCheckClicked = (e) => {\r\n\t\tsetStateTabs({\r\n\t\t\t...stateTabs,\r\n\t\t\t[e.target.name]: e.target.checked\r\n\t\t});\r\n\t};\r\n\t\r\n\tObject.keys(selectedSalad).forEach(name => {\r\n\t\t\r\n\t\tlinks.push(\r\n\t\t\t\t<label key={name}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tchecked={stateTabs[name]}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tonChange={handleCheckClicked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{name}{\" \"}\r\n\t\t\t\t</label>\r\n\t\t);\r\n\t\t\r\n\t\tif (!stateTabs[name]) return;\r\n\t\t\r\n\t\tconst color = saladColors[name];\r\n\t\t\r\n\t\ttabs.push(\r\n\t\t\t\t<Tab style={{ borderColor: color, color: color }} className={`salad-tab ${name}-tab`} key={name}>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Tab>\r\n\t\t);\r\n\t\t\r\n\t\ttabPanels.push(\r\n\t\t\t\t<TabPanel style={{ borderColor: color }} className='salad-tab-panel' key={name}>\r\n\t\t\t\t\t<div className=\"list\">\r\n\t\t\t\t\t\t{Object.values(selectedSalad[name]).map(item => <IngredientListItem item={item} handleOnItemClick={(itemKey) => handleOnItemClick(name, itemKey)}/>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</TabPanel>\r\n\t\t)\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t\t<div className='sm-ingredients-comp'>\r\n\t\t\t\t<Tabs selectedTabClassName='salad-tab--selected' selectedTabPanelClassName='salad-tab-panel--selected'>\r\n\t\t\t\t\t<TabList className='salad-tab-list'>{tabs}</TabList>\r\n\t\t\t\t\t{tabPanels}\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSmIngredients.propTypes = {\r\n\tselectedSalad: PropTypes.object,\r\n\thandleOnItemClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SmIngredients;\r\n","// Lettuce images\r\nimport LettuceImg from '../assets/lettuce.jpg';\r\nimport SpinachImg from '../assets/spinach.jpg';\r\nimport ArugulaImg from '../assets/aurgula.jpg';\r\nimport MixedGreensImg from '../assets/mixed-greens.jpg';\r\n\r\n// Topping images\r\nimport ToppingImg from '../assets/toppings.jpg';\r\nimport TomatoImg from '../assets/tomato.jpg';\r\nimport FetaCheeseImg from '../assets/feta-cheese.jpg';\r\nimport CucumberImg from '../assets/cucumber.jpg';\r\nimport PineappleImg from '../assets/pineapple.jpg';\r\nimport OnionImg from '../assets/onion.jpg';\r\nimport GreenPepperImg from '../assets/green-pepper.jpg';\r\nimport PickleImg from '../assets/pickle.jpg';\r\nimport CheddarCheeseImg from '../assets/cheddar-cheese.jpg';\r\n\r\n// Dressing images\r\nimport DressingImg from '../assets/dressing.jpg';\r\nimport HouseDressingImg from '../assets/house-dressing.jpg';\r\nimport RanchImg from '../assets/ranch.png';\r\nimport HoneyMustardImg from '../assets/honey-mustard.jpg';\r\n\r\nexport const ingredientsArr = [\r\n\t{\r\n\t\tid: '1',\r\n\t\tname: 'Lettuce',\r\n\t\timg: LettuceImg,\r\n\t\titems: [\r\n\t\t\t{id: '1a', name: 'Spinach', img: SpinachImg},\r\n\t\t\t{id: '1b', name: 'Arugula', img: ArugulaImg},\r\n\t\t\t{id: '1c', name: 'Mixed Greens', img: MixedGreensImg},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\tname: 'Toppings',\r\n\t\timg: ToppingImg,\r\n\t\titems: [\r\n\t\t\t{id: '2a', name: 'Tomato', img: TomatoImg},\r\n\t\t\t{id: '2b', name: 'Feta cheese', img: FetaCheeseImg},\r\n\t\t\t{id: '2c', name: 'Cucumber', img: CucumberImg},\r\n\t\t\t{id: '2d', name: 'Pineapple', img: PineappleImg},\r\n\t\t\t{id: '2e', name: 'Onion', img: OnionImg},\r\n\t\t\t{id: '2f', name: 'Green pepper', img: GreenPepperImg},\r\n\t\t\t{id: '2g', name: 'Pickle', img: PickleImg},\r\n\t\t\t{id: '2h', name: 'Cheddar cheese', img: CheddarCheeseImg}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: '3',\r\n\t\tname: 'Dressings',\r\n\t\timg: DressingImg,\r\n\t\titems: [\r\n\t\t\t{id: '3a', name: 'House dressing', img: HouseDressingImg},\r\n\t\t\t{id: '3b', name: 'Ranch', img: RanchImg},\r\n\t\t\t{id: '3c', name: 'Honey mustard', img: HoneyMustardImg},\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const ingredients = {\r\n\tlettuces: {\r\n\t\t'1a': {id: '1a', name: 'Spinach', img: SpinachImg, checked: true},\r\n\t\t'1b': {id: '1b', name: 'Arugula', img: ArugulaImg, checked: false},\r\n\t\t'1c': {id: '1c', name: 'Mixed Greens', img: MixedGreensImg, checked: false},\r\n\t},\r\n\ttoppings: {\r\n\t\t'2a': {id: '2a', name: 'Tomato', img: TomatoImg, checked: false},\r\n\t\t'2b': {id: '2b', name: 'Feta cheese', img: FetaCheeseImg, checked: false},\r\n\t\t'2c': {id: '2c', name: 'Cucumber', img: CucumberImg, checked: false},\r\n\t\t'2d': {id: '2d', name: 'Pineapple', img: PineappleImg, checked: false},\r\n\t\t'2e': {id: '2e', name: 'Onion', img: OnionImg, checked: false},\r\n\t\t'2f': {id: '2f', name: 'Green pepper', img: GreenPepperImg, checked: false},\r\n\t\t'2g': {id: '2g', name: 'Pickle', img: PickleImg, checked: false},\r\n\t\t'2h': {id: '2h', name: 'Cheddar cheese', img: CheddarCheeseImg, checked: false}\r\n\t},\r\n\tdressings: {\r\n\t\t'3a': {id: '3a', name: 'House dressing', img: HouseDressingImg, checked: false},\r\n\t\t'3b': {id: '3b', name: 'Ranch', img: RanchImg, checked: false},\r\n\t\t'3c': {id: '3c', name: 'Honey mustard', img: HoneyMustardImg, checked: false},\r\n\t}\r\n};\r\n\r\nexport const defaultIngredients = {};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './salad-overview-item.styles.scss'\r\n\r\nconst SaladOverviewItem = ({ itemType, header, color }) => {\r\n\tconst ingredients = Object.values(itemType).filter(ingredient => ingredient.checked);\r\n\t\r\n\treturn (\r\n\t\t\t<div className={`salad-overview-item-comp ${header}`}>\r\n\t\t\t\t<div className=\"header-container\">{header}</div>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t{ingredients.map(ingredient => (\r\n\t\t\t\t\t\t\t<span>{ingredient.name}</span>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{!ingredients.length ? 'nothing added' : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSaladOverviewItem.propTypes = {\r\n\titemType: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SaladOverviewItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './salad-overview.styles.scss';\r\nimport SaladOverviewItem from \"../salad-overview-item/salad-overview-item.comp\";\r\n\r\nconst SaladOverview = ({ selectedSalad, saladColors }) => {\r\n\tconst { id, name, ...rest } = selectedSalad;\r\n\treturn (\r\n\t\t\t<div className='salad-overview-comp'>\r\n\t\t\t\t{Object.keys(rest).map(key => (\r\n\t\t\t\t\t\t<SaladOverviewItem itemType={selectedSalad[key]} header={key} color={saladColors[key]} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSaladOverview.propTypes = {\r\n\tselectedSalad: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SaladOverview;\r\n","import Swal from 'sweetalert2';\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst defaultConfig = {\r\n\tconfirmButtonColor: '#4CAF50',\r\n\tcancelButtonColor: '#f44336'\r\n};\r\n\r\nexport const showAlert = (config) => {\r\n\treturn MySwal.fire({ ...defaultConfig, ...config });\r\n};\r\n\r\nexport const showToast = (config) => {\r\n\tconst Toast = Swal.mixin({\r\n\t\ttoast: true,\r\n\t\tposition: 'bottom',\r\n\t\tshowConfirmButton: false,\r\n\t\ttimer: 3500\r\n\t});\r\n\treturn Toast.fire(config);\r\n};\r\n\r\nexport const showTextAlert = async (defaultValue) => {\r\n\tconst { value } = await Swal.fire({\r\n\t\t...defaultConfig,\r\n\t\ttitle: 'Name your salad...',\r\n\t\tinput: 'text',\r\n\t\tconfirmButtonText: 'Save',\r\n\t\tshowCancelButton: true,\r\n\t\tinputValue: defaultValue,\r\n\t\tinputValidator: (value) => {\r\n\t\t\tif (!value) {\r\n\t\t\t\treturn 'You need to write something!'\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\tif (value) {\r\n\t\treturn value;\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './salad-maker.styles.scss';\r\nimport SectionFooter from \"../section-footer/section-footer.comp\";\r\nimport Button from \"../button/button.comp\";\r\nimport AppRouteActions, {setRouteWithName} from \"../../redux/actions/app-route.actions\";\r\nimport SmIngredients from \"../sm-ingredients/sm-ingredients.comp\";\r\nimport {ingredients} from \"../../data/data-store\";\r\nimport SaladOverview from \"../salad-overview/salad-overview.comp\";\r\nimport {showTextAlert, showToast} from \"../../utils/alert\";\r\nimport FavActions, {parseSalad} from \"../../redux/actions/fav.actions\";\r\nimport mergeObj from 'lodash.merge';\r\n\r\nconst SaladMaker = ({ setRouteWithName, selectedSalad, addOrUpdateSalad }) => {\r\n\tconsole.log('AppRouteActions', AppRouteActions);\r\n\t\r\n\t\r\n\tconst [selectedSaladCopy, setSelectedSaladCopy] = useState(mergeObj(JSON.parse(JSON.stringify(ingredients)), JSON.parse(JSON.stringify(selectedSalad))));\r\n\t\r\n\tuseEffect(() => {\r\n\t\r\n\t}, []);\r\n\t\r\n\tconst saladColors = {\r\n\t\tlettuces: '#4CAF50',\r\n\t\ttoppings: '#FF9800',\r\n\t\tdressings: '#F57C00'\r\n\t};\r\n\t\r\n\tconst handleOnOptionSelect = (key, itemKey) => {\r\n\t\tconst doOnSelect = () => {\r\n\t\t\tsetSelectedSaladCopy({\r\n\t\t\t\t...selectedSaladCopy,\r\n\t\t\t\t[key]: {\r\n\t\t\t\t\t...selectedSaladCopy[key],\r\n\t\t\t\t\t[itemKey]: {\r\n\t\t\t\t\t\t...selectedSaladCopy[key][itemKey],\r\n\t\t\t\t\t\tchecked: !selectedSaladCopy[key][itemKey].checked\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tif (key === 'lettuces') {\r\n\t\t\tlet count = 0;\r\n\t\t\tObject.values(selectedSaladCopy.lettuces).forEach(item => {\r\n\t\t\t\tif (item.checked) count += 1;\r\n\t\t\t});\r\n\t\t\tif (selectedSaladCopy[key][itemKey].checked) {\r\n\t\t\t\tif (count === 1) {\r\n\t\t\t\t\tshowToast({ icon: 'warning', title: 'Must have at least 1 base for your salad!'});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdoOnSelect();\r\n\t\t\t} else {\r\n\t\t\t\tdoOnSelect()\r\n\t\t\t}\r\n\t\t} else doOnSelect();\r\n\t};\r\n\t\r\n\tconst handleAddSaladClick = () => {\r\n\t\tshowTextAlert(selectedSaladCopy.name).then(value => {\r\n\t\t\tif (value === undefined) return;\r\n\t\t\taddOrUpdateSalad({ ...selectedSaladCopy, name: value });\r\n\t\t\tsetRouteWithName('fav');\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t\t<div className='salad-maker-comp'>\r\n\t\t\t\t\r\n\t\t\t\t<SmIngredients selectedSalad={selectedSaladCopy} handleOnItemClick={handleOnOptionSelect} saladColors={saladColors} />\r\n\t\t\t\t<SaladOverview selectedSalad={selectedSaladCopy} saladColors={saladColors} />\r\n\t\t\t\t<SectionFooter>\r\n\t\t\t\t\t<Button label='Cancel' onClick={() => setRouteWithName('fav')} isInverse color='danger'/>\r\n\t\t\t\t\t<Button label={selectedSaladCopy.id ? 'Update Salad' : 'Add Salad'} onClick={() => handleAddSaladClick()} />\r\n\t\t\t\t</SectionFooter>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nSaladMaker.defaultProps = {\r\n\tselectedSalad: {\r\n\t\tid: null,\r\n\t\tname: ''\r\n\t}\r\n};\r\n\r\nSaladMaker.propTypes = {\r\n\tselectedSalad: PropTypes.object\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetRouteWithName: setRouteWithName,\r\n\taddOrUpdateSalad: FavActions.addOrUpdateItem\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SaladMaker);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './fav-list-item.styles.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport FavActions from \"../../redux/actions/fav.actions\";\r\nimport AppRouteActions from \"../../redux/actions/app-route.actions\";\r\nimport SaladMaker from \"../salad-maker/salad-maker.comp\";\r\nimport {showAlert} from \"../../utils/alert\";\r\n\r\nconst FavListItem = ({ item, setRoute, deleteSalad }) => {\r\n\tconst { id, name, ...rest } = item;\r\n\tconst lettuces = Object.values(rest.lettuces);\r\n\tconst toppings = Object.values(rest.toppings);\r\n\tconst dressings = Object.values(rest.dressings);\r\n\t\r\n\tconst handleOnEditClick = () => {\r\n\t\tsetRoute('saladMaker', 'Edit salad', {selectedSalad: item});\r\n\t};\r\n\t\r\n\tconst handleOnDeleteClick = () => {\r\n\t\tshowAlert({\r\n\t\t\ttype: 'warning',\r\n\t\t\ttitle: `Are you sure you want you delete salad: ${name}`,\r\n\t\t\tconfirmButtonText: 'Yes',\r\n\t\t\tcancelButtonText: 'No',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tfocusCancel: true,\r\n\t\t\tcancelButtonColor: '#4CAF50',\r\n\t\t\tconfirmButtonColor: '#f44336'\r\n\t\t}).then(res => {\r\n\t\t\tif (res.value) {\r\n\t\t\t\tdeleteSalad(id);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t\t<div className='cart-list-item-comp'>\r\n\t\t\t\t<div className=\"header-container\">\r\n\t\t\t\t\t<div className='left-part'>{name}</div>\r\n\t\t\t\t\t<div className=\"right-part\">\r\n\t\t\t\t\t\t<span className='edit-btn' onClick={handleOnEditClick}><FontAwesomeIcon icon={faEdit}/></span>\r\n\t\t\t\t\t\t<span className='delete-btn' onClick={handleOnDeleteClick}><FontAwesomeIcon icon={faTrashAlt}/></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<b>Lettuces: </b>\r\n\t\t\t\t\t{lettuces.map(ingredient => (\r\n\t\t\t\t\t\t\t<span>{ingredient.name}</span>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<b><br/>Toppings: </b>\r\n\t\t\t\t\t{toppings.map(ingredient => (\r\n\t\t\t\t\t\t\t<span>{ingredient.name}</span>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{toppings.length ? null : '_'}\r\n\t\t\t\t\t<b><br/>Dressings: </b>\r\n\t\t\t\t\t{dressings.map(ingredient => (\r\n\t\t\t\t\t\t\t<span>{ingredient.name}</span>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{dressings.length ? null : '_'}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nFavListItem.propTypes = {\r\n\titem: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetRoute: AppRouteActions.setRoute,\r\n\tdeleteSalad: FavActions.removeFavItem\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FavListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavListItem from \"../fav-list-item/fav-list-item.comp\";\r\nimport './fav-list.styles.scss';\r\n\r\nconst FavList = ({ favList }) => {\r\n\treturn (\r\n\t\t\t<div className={`fav-list-comp ${!favList.length ? 'flex' : ''}`}>\r\n\t\t\t\t{ favList.length === 0 ? <div className='no-salad-label'>Your favorites list is empty. <br/><span>You can add up to 3 salads...</span></div> : null}\r\n\t\t\t\t{ favList.map(favItem => (\r\n\t\t\t\t\t\t<FavListItem item={favItem} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nFavList.propTypes = {\r\n\tfavList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default FavList;\r\n","import React, { useEffect } from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './fav.styles.scss';\r\nimport Button from \"../button/button.comp\";\r\nimport SectionFooter from \"../section-footer/section-footer.comp\";\r\nimport AppRouteActions from \"../../redux/actions/app-route.actions\";\r\nimport FavList from \"../fav-list/fav-list.comp\";\r\n\r\nconst Fav = ({ setRouteWithName, favList }) => {\r\n\tuseEffect(() => {\r\n\t\tconsole.log('favList', favList);\r\n\t}, []);\r\n\t\r\n\tconst handleOnAddClick = () => {\r\n\t\tif (favList.length === 3) return;\r\n\t\tsetRouteWithName('saladMaker')\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t\t<div className='fav-comp'>\r\n\t\t\t\t<div className=\"list-container\">\r\n\t\t\t\t\t<FavList favList={favList} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<SectionFooter>\r\n\t\t\t\t\t<Button label=\"Add Salad\" onClick={handleOnAddClick} disabled={favList.length === 3} />\r\n\t\t\t\t</SectionFooter>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nFav.propTypes = {\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ fav }) => ({\r\n\tfavList: fav.list\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tsetRouteWithName: AppRouteActions.setRouteWithName\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fav);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './main-container.comp.scss';\r\nimport SectionContainer from \"../section-container/section-container.comp\";\r\nimport Fav from \"../fav/fav.comp\";\r\nimport SaladMaker from \"../salad-maker/salad-maker.comp\";\r\n\r\nconst MainContainer = ({Comp, header, props}) => {\r\n\tconst getComp = () => {\r\n\t\tswitch(Comp) {\r\n\t\t\tcase 'saladMaker':\r\n\t\t\t\treturn <SaladMaker {...props}/>;\r\n\t\t\tdefault:\r\n\t\t\t\treturn <Fav {...props} />\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t\t<div className='main-container-comp'>\r\n\t\t\t\t<SectionContainer header={header}>\r\n\t\t\t\t\t{getComp()}\r\n\t\t\t\t</SectionContainer>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({appRoute}) => ({\r\n\theader: appRoute.header,\r\n\tComp: appRoute.Comp,\r\n\tprops: appRoute.props\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainContainer);\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport MainContainer from \"./components/main-container/main-container.comp\";\nimport SaladBowlImg from './assets/salad-bowl.png';\n\nfunction App() {\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<MainContainer />\n\t\t\t\t<div className=\"salad-bowl left\" style={{ backgroundImage: `url(${SaladBowlImg})` }}/>\n\t\t\t\t<div className=\"salad-bowl right\" style={{ backgroundImage: `url(${SaladBowlImg})` }}/>\n\t\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {routeTypes} from \"../types\";\r\n\r\nconst initialState = {\r\n\theader: 'My Fav Salads',\r\n\tComp: 'fav',\r\n\tprops: {},\r\n\tsectionProps: {}\r\n};\r\n\r\nconst AppRouteReducer = (state = initialState, action) => {\r\n\tconst {type, payload} = action;\r\n\tswitch (type) {\r\n\t\tcase routeTypes.setCurrentPage:\r\n\t\t\treturn {...state, ...payload};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default AppRouteReducer;\r\n","import {favTypes} from \"../types\";\r\n\r\nconst initialState = {\r\n\tlist: [],\r\n};\r\n\r\nconst FavReducer = (state = initialState, { type, payload }) => {\r\n\tswitch(type) {\r\n\t\tcase favTypes.addFavItem:\r\n\t\t\treturn { ...state, list: [...state.list, payload] };\r\n\t\tcase favTypes.removeFavItem:\r\n\t\t\treturn { ...state, list: state.list.filter(item => item.id !== payload) };\r\n\t\tcase favTypes.clearFavs:\r\n\t\t\treturn { ...state, list: [] };\r\n\t\tcase favTypes.updateFavItem:\r\n\t\t\treturn { ...state, list: state.list.map(item => item.id === payload.id ? payload : item) };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default FavReducer;\r\n","import AppRouteReducer from \"./app-route.reducer\";\r\nimport {combineReducers} from \"redux\";\r\nimport FavReducer from \"./fav.reducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n\tappRoute: AppRouteReducer,\r\n\tfav: FavReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport RootReducer from './reducers/root-reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tmiddlewares.push(logger);\r\n}\r\n\r\nconst composers = [applyMiddleware(...middlewares)];\r\nconst Store = createStore(RootReducer, {}, compose(...composers));\r\n\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from \"./redux/store\";\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}